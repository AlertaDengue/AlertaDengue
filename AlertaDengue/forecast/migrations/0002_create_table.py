# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-27 00:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [('dados', '__first__'), ('forecast', '0001_initial')]

    state_operations = [
        migrations.CreateModel(
            name='ForecastCases',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'epiweek',
                    models.IntegerField(help_text='Semana epidemiológica'),
                ),
                (
                    'published_date',
                    models.DateField(
                        db_column='published_date',
                        help_text='Data da publicação da previsão',
                    ),
                ),
                (
                    'init_date_epiweek',
                    models.DateField(
                        db_column='init_date_epiweek',
                        help_text='Data do inicio da semana da previsão',
                    ),
                ),
                ('cases', models.IntegerField(help_text='Casos Previstos')),
                (
                    'cid10',
                    models.ForeignKey(
                        db_column='cid10',
                        help_text='Doença',
                        on_delete=django.db.models.deletion.CASCADE,
                        to='dados.CID10',
                    ),
                ),
                (
                    'city',
                    models.ForeignKey(
                        db_column='geocode',
                        help_text='Cidade',
                        on_delete=django.db.models.deletion.CASCADE,
                        to='dados.City',
                    ),
                ),
            ],
            options={
                'db_table': 'forecast"."forecast_cases',
                'verbose_name_plural': 'forecast',
            },
        ),
        migrations.CreateModel(
            name='ForecastCity',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'active',
                    models.BooleanField(default=True, help_text='Está Ativo?'),
                ),
                (
                    'city',
                    models.ForeignKey(
                        db_column='geocode',
                        help_text='Código do Município',
                        on_delete=django.db.models.deletion.CASCADE,
                        to='dados.City',
                    ),
                ),
            ],
            options={
                'db_table': 'forecast"."forecast_city',
                'verbose_name_plural': 'forecast cities',
            },
        ),
        migrations.CreateModel(
            name='ForecastModel',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Nome do Modelo de Previsão', max_length=128
                    ),
                ),
                ('weeks', models.IntegerField(help_text='Total de Semanas')),
                (
                    'commit_id',
                    models.CharField(
                        help_text='ID do commit (github)', max_length=7
                    ),
                ),
                ('active', models.BooleanField(help_text='Está ativo?')),
            ],
            options={'db_table': 'forecast"."forecast_model'},
        ),
        migrations.AddField(
            model_name='forecastcity',
            name='forecast_model',
            field=models.ForeignKey(
                db_column='forecast_model_id',
                help_text='Modelo de Previsão',
                on_delete=django.db.models.deletion.CASCADE,
                to='forecast.ForecastModel',
            ),
        ),
        migrations.AddField(
            model_name='forecastcases',
            name='forecast_model',
            field=models.ForeignKey(
                db_column='forecast_model_id',
                help_text='Modelo de Previsão',
                on_delete=django.db.models.deletion.CASCADE,
                to='forecast.ForecastModel',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='forecastcity',
            unique_together=set([('city', 'forecast_model')]),
        ),
        migrations.AlterUniqueTogether(
            name='forecastcases',
            unique_together=set(
                [
                    (
                        'epiweek',
                        'city',
                        'cid10',
                        'forecast_model',
                        'published_date',
                    )
                ]
            ),
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    '''
                    CREATE SCHEMA IF NOT EXISTS "forecast";

                    CREATE TABLE IF NOT EXISTS "forecast".forecast_model (
                        id SERIAL PRIMARY KEY,
                        name VARCHAR(128) NOT NULL,
                        weeks SMALLINT NOT NULL,
                        commit_id CHAR(7) NOT NULL,
                        active BOOL NOT NULL
                    );

                    CREATE TABLE IF NOT EXISTS "forecast".forecast_cases (
                        id SERIAL PRIMARY KEY,
                        epiweek INT NOT NULL,
                        geocode INT NOT NULL,
                        cid10 character varying(5) NOT NULL,
                        forecast_model_id INT,
                        published_date date NOT NULL,
                        init_date_epiweek date NOT NULL,
                        cases INT NOT NULL,

                        UNIQUE (
                          epiweek, geocode, cid10, forecast_model_id,
                          published_date
                        ),
                        FOREIGN KEY(forecast_model_id)
                          REFERENCES "forecast".forecast_model(id),
                        FOREIGN KEY(geocode)
                          REFERENCES "Dengue_global"."Municipio"(geocodigo),
                        FOREIGN KEY(cid10)
                          REFERENCES "Dengue_global"."CID10"(codigo)
                    );

                    CREATE TABLE IF NOT EXISTS "forecast".forecast_city (
                        id SERIAL PRIMARY KEY,
                        geocode INT NOT NULL,
                        forecast_model_id INT,
                        active BOOL NOT NULL,
                        UNIQUE (geocode, forecast_model_id),
                        FOREIGN KEY(forecast_model_id)
                          REFERENCES "forecast".forecast_model(id),
                        FOREIGN KEY(geocode)
                          REFERENCES "Dengue_global"."Municipio"(geocodigo)
                    );
                    ''',
                    hints={'target_db': 'forecast'},
                )
            ],
            state_operations=state_operations,
        )
    ]
