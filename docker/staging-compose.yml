version: "3.4"
services:
  staging_memcache:
    image: memcached:latest
    hostname: staging_memcache
    ports: []
    networks:
      - staging
    restart: always

  staging_rabbitmq:
    image: rabbitmq:3
    hostname: staging_rabbitmq
    networks:
      - staging
    restart: always

  staging_db:
    build:
      context: ".."
      dockerfile: "docker/Dockerfile-postgres"
    env_file:
      - ../.env_staging
    hostname: staging_db
    ports:
      - 25432:25432
    volumes:
      - ${STAGING_DATA_DIR}/staging:/var/lib/postgresql/data
      - ./dev_dumps:/dumps

    restart: always
    command: -p 25432
    networks:
      - staging

  staging_web:
    build:
      context: ".."
      dockerfile: "docker/Dockerfile-dev"
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.8}
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    env_file:
      - ../.env_staging
    ports:
      - 8080:8000
    environment:
      - MEMCACHED_HOST=staging_memcache
      - CELERY_BROKER_URL=amqp://guest:guest@staging_rabbitmq:5672
      - PSQL_HOST=staging_db
      - PSQL_PORT=25432
    volumes:
      - ${DOCKER_HOST_MEDIA_ROOT}:/MEDIA_ROOT
      - ${DOCKER_HOST_MEDIA_ROOT}/dbfs_parquet:/MEDIA_ROOT/dbfs_parquet
      - ${DOCKER_HOST_IMPORTED_FILES_DIR}:/IMPORTED_FILES
      - ${DOCKER_HOST_MAPFILES_DIR}:/srv/deploy/maps
      - ${DOCKER_HOST_SHAPEFILES_DIR}:/srv/deploy/shapefile
      - ${DOCKER_HOST_TIFFS_DIR}:/srv/deploy/tiffs
      - ${DOCKER_HOST_LOG_DIR}:/var/log/mapserver
      - ${DOCKER_HOST_INCIDENCE_MAPS}:/srv/deploy/AlertaDengue/static/img/incidence_maps
    depends_on:
      - staging_rabbitmq
      - staging_memcache
    networks:
      - staging
    restart: always

  staging_celery-worker:
    build:
      context: ".."
      dockerfile: "docker/Dockerfile-celery"
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.8}
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    env_file:
      - ../.env_staging
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@staging_rabbitmq:5672
      - PSQL_HOST=staging_db
      - PSQL_PORT=25432
    volumes:
      - ${DOCKER_HOST_MEDIA_ROOT}:/MEDIA_ROOT
      - ${DOCKER_HOST_MEDIA_ROOT}/dbfs_parquet:/MEDIA_ROOT/dbfs_parquet
      - ${DOCKER_HOST_IMPORTED_FILES_DIR}:/IMPORTED_FILES
    depends_on:
      - staging_db
      - staging_rabbitmq
      - staging_memcache
    networks:
      - staging
    restart: always

  staging_mapserver:
    build:
      context: ".."
      dockerfile: "docker/Dockerfile-mapserver"
    ports:
      - 7777:80
    env_file:
      - ../.env_staging
    volumes:
      - ${DOCKER_HOST_MAPFILES_DIR}:/maps:ro
      - ${DOCKER_HOST_SHAPEFILES_DIR}:/shapefile:ro
      - ${DOCKER_HOST_TIFFS_DIR}:/tiffs:ro
      - ${DOCKER_HOST_LOG_DIR}:/maplog:ro
    restart: always

networks:
  staging:
      driver: bridge
