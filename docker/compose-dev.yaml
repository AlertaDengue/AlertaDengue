version: "3.4"
services:
  memcached:
    networks:
      - staging

  rabbitmq:
    networks:
      - staging

  db:
    build:
      context: ".."
      dockerfile: "docker/Dockerfile-postgres"
    env_file:
      - ../.env
    hostname: db
    ports:
      - ${PSQL_PORT}:${PSQL_PORT}
    networks:
      - staging
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./dev_dumps:/dumps
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p ${PSQL_PORT} -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    command: -p ${PSQL_PORT}

  web:
    build:
      context: ".."
      dockerfile: "docker/Dockerfile-dev"
      args:
        IMAGE_BUILD: infodengue-dev_base:latest
    ports:
      - 8080:8000
    networks:
      - staging
    command: ["python", "manage.py", "runserver"]

  worker:
    networks:
      - staging
    depends_on:
      - db
      - rabbitmq
      - memcached
    restart: always

networks:
  staging:
      driver: bridge


volumes:
  pg_data:
