name: build-alertadengue

on: [push, pull_request]

env:
  ALLOWED_HOSTS: 'localhost'
  ADMINS: Dev:dev@example.com
  SECRET_KEY: my-secret-key
  DEBUG: False
  PSQL_HOST: db
  PSQL_PORT: 25432
  PSQL_DB: denguedb
  PSQL_USER: dengueuser
  PSQL_PASSWORD: denguepassword
  QUERY_CACHE_TIMEOUT: 86400
  MEMCACHED_HOST: localhost
  MEMCACHED_PORT: 11211
  TEMP_FILES_DIR: /tmp
  MEDIA_ROOT: /MEDIA_ROOT
  IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MEDIA_ROOT: /MEDIA_ROOT
  DOCKER_HOST_TEMP_PARQUET_DIR: /tmp/dbfs_parquet
  DOCKER_HOST_IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MAPFILES_DIR: /srv/deploy/maps
  DOCKER_HOST_SHAPEFILES_DIR: /srv/deploy/shapefile
  DOCKER_HOST_TIFFS_DIR: /srv/deploy/tiffs
  DOCKER_HOST_LOG_DIR: /var/log/mapserver
  DOCKER_HOST_INCIDENCE_MAPS: /opt/services/AlertaDengue/static/img/incidence_maps
  EMAIL_CONFIG: ${{ secrets.EMAIL_CONFIG }}
  EMAIL_PORT: 587
  EMAIL_CONNECTION_DEFAULT: 'outlook'
  EMAIL_HOST: 'smtp.gmail.com'
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  HOST_UID: 1000
  HOST_GID: 1000
  ENV: dev
  STORAGE: /tmp/alertadengue/storage
  DOCKER_HOST_STATIC: /opt/services/AlertaDengue/staticfiles

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.9"]
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/dev.yaml
        channels: conda-forge,nodefaults
        activate-environment: alertadengue
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: prepare folders
      run: mkdir -p ${STORAGE}


    - name: Install dependencies
      run: |
        poetry install

    - name: Create env file
      run: envsubst < env.tpl > .env

    - name: Download data files from Dataverse
      run: |
        mkdir -p containers/postgres/dumps
        tree -L 1 ../
        wget https://dataverse.harvard.edu/api/access/datafile/4154429 -O containers/postgres/dev_dumps/latest_infodengue.sql.gz
        wget https://dataverse.harvard.edu/api/access/datafile/5110797 -O containers/postgres/dev_dumps/latest_dengue.sql.gz

    - name: Build docker images
      run: |
         make container-build

    - name: Docker start web
      run: |
        make container-run-all

    - name: Docker waiting services
      run: |
        make container-wait-all

    - name: Linting
      run: |
        make lint
