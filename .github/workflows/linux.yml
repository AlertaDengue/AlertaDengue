# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ALLOWED_HOSTS: 'localhost'
  ADMINS: Dev:dev@example.com
  SECRET_KEY: my-secret-key
  DEBUG: False
  PSQL_DB: ${{ secrets.PSQL_DB }}
  PSQL_USER: ${{ secrets.PSQL_USER }}
  PSQL_PASSWORD: ${{ secrets.PSQL_PASSWORD }}
  PSQL_HOST: staging_db
  PSQL_PORT: ${{ secrets.PSQL_PORT }}
  QUERY_CACHE_TIMEOUT: 86400
  MEMCACHED_HOST: ${{ secrets.MEMCACHED_HOST }}
  MEMCACHED_PORT: ${{ secrets.MEMCACHED_PORT }}
  TEMP_FILES_DIR: /tmp
  MEDIA_ROOT: /MEDIA_ROOT
  IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MEDIA_ROOT: /MEDIA_ROOT
  DOCKER_HOST_TEMP_PARQUET_DIR: /tmp/dbfs_parquet
  DOCKER_HOST_IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MAPFILES_DIR: /srv/deploy/maps
  DOCKER_HOST_SHAPEFILES_DIR: /srv/deploy/shapefile
  DOCKER_HOST_TIFFS_DIR: /srv/deploy/tiffs
  DOCKER_HOST_LOG_DIR: /var/log/mapserver
  DOCKER_HOST_INCIDENCE_MAPS: /srv/deploy/AlertaDengue/static/img/incidence_maps
  EMAIL_CONFIG: ${{ secrets.EMAIL_CONFIG }}
  EMAIL_PORT: 587
  EMAIL_CONNECTION_DEFAULT: 'outlook'
  EMAIL_HOST: 'smtp.gmail.com'
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  HOST_UID: 1000
  HOST_GID: 1000

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    env:
      COMPOSE_FILE: docker/staging-compose.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Create env file
      run: envsubst < env.tpl > .env

    - name: Download data files from Dataverse
      run: |
        mkdir -p docker/dev_dumps
        wget https://dataverse.harvard.edu/api/access/datafile/4154429 -O docker/dev_dumps/latest_infodengue.sql.gz
        wget https://dataverse.harvard.edu/api/access/datafile/5110797 -O docker/dev_dumps/latest_dengue.sql.gz

    - name: Build and deploy demo database
      id: staging_db
      run: |
         make docker-build SERVICES=db
         make docker-start SERVICES=db

    - name: Docker build all images
      run: |
        make docker-build

    - name: Docker start web
      run: |
        make docker-start-ci

    - name: Linting
      run: |
        make lint
