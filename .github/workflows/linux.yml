name: build-alertadengue

on: [push, pull_request]

env:
  ENV: dev
  SERVICES_NUMBER: 2
  PORT_WEB: 8080
  HOST_UID: 1000
  HOST_GID: 1000
  PG_RESTORE: schemas
  PSQL_HOST: postgres
  PSQL_PORT: 5432
  PSQL_DB: dengue
  PSQL_DBF: infodengue
  PSQL_USER: infodenguedev
  PSQL_PASSWORD: infodenguedev
  POSTGRES_USER: postgres

  ALLOWED_HOSTS: 'localhost'
  ADMINS: Dev:dev@example.com
  SECRET_KEY: my-secret-key
  DEBUG: False

  QUERY_CACHE_TIMEOUT: 86400
  MEMCACHED_HOST: localhost
  MEMCACHED_PORT: 11211
  TEMP_FILES_DIR: /tmp

  MEDIA_ROOT: /MEDIA_ROOT
  IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MEDIA_ROOT: /MEDIA_ROOT
  DOCKER_HOST_TEMP_PARQUET_DIR: /tmp/dbfs_parquet
  DOCKER_HOST_IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MAPFILES_DIR: /srv/deploy/maps
  DOCKER_HOST_SHAPEFILES_DIR: /srv/deploy/shapefile
  DOCKER_HOST_INCIDENCE_MAPS: /opt/services/AlertaDengue/static/img/incidence_maps

  EMAIL_CONFIG: ${{ secrets.EMAIL_CONFIG }}
  EMAIL_PORT: 587
  EMAIL_CONNECTION_DEFAULT: 'outlook'
  EMAIL_HOST: 'smtp.gmail.com'
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

  DOCKER_HOST_STATIC: /opt/services/AlertaDengue/staticfiles
  STORAGE: /tmp/alertadengue/storage

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.9"]
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/dev.yaml
        channels: conda-forge,nodefaults
        activate-environment: alertadengue
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: Install dependencies
      run: |
        poetry lock
        poetry install

    - name: Create env file
      run: envsubst < .env.tpl > .env_dev

    - name: Start containers
      run: |
        containers-sugar start --group dev

    - name: Container wait
      run: |
        makim wait-all

    - name: Linting
      run: |
        pre-commit install
        pre-commit run --all-files
