name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:

  ADMINS: Dev:dev@example.com
  ALLOWED_HOSTS: "localhost"
  DEBUG: False
  ENV: dev
  WEB_PORT: 8080
  HOST_UID: 1000
  HOST_GID: 1000
  SECRET_KEY: my-secret-key
  PORT_WEB: 8000

  EMAIL_CONFIG: ${{ secrets.EMAIL_CONFIG }}
  EMAIL_CONNECTION_DEFAULT: "outlook"
  EMAIL_HOST: "smtp.gmail.com"
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_PORT: 587
  EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend
  MEMCACHED_HOST: "localhost"
  MEMCACHED_PORT: 11211
  QUERY_CACHE_TIMEOUT: 86400

  POSTGRES_USER: postgres
  PSQL_DB: dengue
  PSQL_DBF: infodengue
  PSQL_HOST: infodengue-dev-stagingdb
  PSQL_PASSWORD: infodenguedev
  PSQL_PORT: 25432
  PSQL_USER: infodenguedev
  PSQL_DEV_USER: infodenguedev
  PSQL_DEV_PASSWORD: infodenguedev
  PG_RESTORE_STAGING: schemas
  PG_DATA_PROD: "../../staging_data/postgres_data_prod"
  PG_DATA_STAGING: "../../staging_data/postgres_data"

  DBF_SINAN: /DBF_SINAN
  IMPORTED_FILES: /IMPORTED_FILES
  MEDIA_ROOT: /MEDIA_ROOT
  DOCKER_HOST_DBF_SINAN: "../../staging_data/sftp2/alertadengue/sinan"
  DOCKER_HOST_IMPORTED_FILES_DIR: "../../staging_data/sftp2/alertadengue/sinan/imported"
  DOCKER_HOST_UPLOADED_FILES_DIR: "../../staging_data/sftp2/alertadengue/sinan/uploaded"

  DOCKER_HOST_SHAPEFILES_DIR: "../../staging_data/shapefiles"
  DOCKER_HOST_TEMP_PARQUET_DIR: "/tmp/dbf_parquet"

  STORAGE: "../../staging_data/"
  DOCKER_HOST_STATIC: "../../staging_data/staticfiles"
  TEMP_FILES_DIR: "/tmp"


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11"]
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4

    - uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/base.yaml
        channels: conda-forge,nodefaults
        activate-environment: alertadengue
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: Prepare data volumes
      run: |
        mkdir -p ../../staging_data/postgres_data
        chmod 777 -R ../../staging_data/postgres_data
        sudo chown 1000:1000 -R  ../../staging_data/postgres_data
        sudo mkdir -p ../staging_data/postgres_data
        sudo chmod 777 -R ../staging_data/postgres_data
        sudo chown 1000:1000 -R  ../staging_data/postgres_data
        mkdir -p /tmp/dbf_duplicated_csv
        chmod 777 -R /tmp/dbf_duplicated_csv


    - name: Install dependencies
      run: |
        poetry lock
        poetry install

    - name: Create env file
      run: envsubst < .env.tpl > .env

    - name: Build postgres database
      run: |
        sugar build --services stagingdb

    - name: Start postgres database
      run: |
        sugar ext start --services stagingdb --options -d

    - name: Start containers
      run: |
        sugar build --group dev --all
        sugar ext start --group dev --all --options -d

    - name: Container wait all
      run: |
          makim develop.container-wait-all

    - name: Linting
      run: |
        pre-commit install
        pre-commit run --all-files
