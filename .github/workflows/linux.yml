# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HOST_MEDIA_ROOT: /MEDIA_ROOT
  ${DOCKER_HOST_MEDIA_ROOT}/dbfs_parquet: /MEDIA_ROOT/dbfs_parquet
  DOCKER_HOST_IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MAPFILES_DIR: /srv/deploy/maps
  DOCKER_HOST_SHAPEFILES_DIR: /srv/deploy/shapefile
  DOCKER_HOST_TIFFS_DIR: /srv/deploy/tiffs
  DOCKER_HOST_LOG_DIR: /var/log/mapserver
  DOCKER_HOST_INCIDENCE_MAPS: /srv/deploy/AlertaDengue/static/img/incidence_maps

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    env:
      COMPOSE_FILE: docker/staging-compose.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Download data files from Dataverse
      run: |
        mkdir -p docker/dev_dumps
        wget https://dataverse.harvard.edu/api/access/datafile/4154429 -O docker/dev_dumps/latest_infodengue.sql.gz
        wget https://dataverse.harvard.edu/api/access/datafile/4154518 -O docker/dev_dumps/latest_dengue.sql.gz

    - name: Create env
      run: envsubst < .env.tmpl > .env_staging

    - name: install dependencies
      run: |
        make install
        python --version

    - name: Build and Deploy staging_DB
      id: staging_db
      run: |
        make build_staging SERVICES_STAGING=staging_db
        make start_staging SERVICES_STAGING=staging_db
        docker ps

    - name: Build staging_WEB
      run: |
        make build_staging SERVICES_STAGING=staging_web

    - name: Deploy staging_WEB
      run: |
        make start_staging SERVICES_STAGING=staging_web

    # - name: Migrate staging database
      # run: |
        # make migrate_staging

    # - name: Generate MapFiles
      # run: |
        # make generate_maps_staging

    - name: Run Flake8
      run: |
        make flake8_staging SERVICES_STAGING=staging_web

    - name: Run tests to APPs
      run: |
        make test_staging_web SERVICES_STAGING=staging_web
