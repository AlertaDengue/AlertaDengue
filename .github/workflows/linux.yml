name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:

  ADMINS: Dev:dev@example.com
  ALLOWED_HOSTS: "localhost"
  DEBUG: False
  ENV: dev
  HOST_GID: 1000
  HOST_UID: 1000
  SECRET_KEY: my-secret-key

  DOCKER_HOST_IMPORTED_FILES_DIR: /IMPORTED_FILES
  DOCKER_HOST_MEDIA_ROOT: /MEDIA_ROOT
  DOCKER_HOST_SHAPEFILES_DIR: "../../staging_data/shapefiles"
  DOCKER_HOST_STATIC: "../../staging_data/staticfiles"
  DOCKER_HOST_TEMP_PARQUET_DIR: "../../staging_data/dbfs_parquet"

  WORK_DIR: /opt/services/epi_scanner
  CTNR_EPISCANNER_DATA_DIR: /opt/services/epi_scanner/data
  HOST_EPISCANNER_DATA_DIR: ../../staging_data/epi_scanner/data

  STORAGE: "../../staging_data/"
  TEMP_FILES_DIR: "/tmp"
  DOCKER_HOST_TEMP_PARQUET_DIR: "/tmp/"

  EMAIL_CONFIG: ${{ secrets.EMAIL_CONFIG }}
  EMAIL_CONNECTION_DEFAULT: "outlook"
  EMAIL_HOST: "smtp.gmail.com"
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_PORT: 587

  IMPORTED_FILES: /IMPORTED_FILES
  MEDIA_ROOT: /MEDIA_ROOT
  MEMCACHED_HOST: "localhost"
  MEMCACHED_PORT: 11211

  PG_DATA_STAGING: "../../staging_data/postgres_data"
  PG_RESTORE_STAGING: schemas
  PORT_WEB: 8080
  POSTGRES_USER: postgres
  PSQL_DB: dengue
  PSQL_DBF: infodengue
  PSQL_HOST: postgres
  PSQL_PASSWORD: infodenguedev
  PSQL_PORT: 25432
  PSQL_USER: infodenguedev
  QUERY_CACHE_TIMEOUT: 86400
  SERVICES_NUMBER: 2

  MINIO_USERNAME: developer
  MINIO_GROUPNAME: developer
  MINIO_GID: 1000
  MINIO_UID: 1000
  MINIO_ROOT_USER: developer
  MINIO_ROOT_PASSWORD: developer
  MINIO_PORT_1: 9000
  MINIO_PORT_2: 9090
  MINIO_ENDPOINT: http://minio:9090


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.9"]
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/dev.yaml
        channels: conda-forge,nodefaults
        activate-environment: alertadengue
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: Prepare data volumes
      run: |
        mkdir -p ../../staging_data/postgres_data
        chmod 777 -R ../../staging_data/postgres_data
        mkdir -p /tmp/dbf_duplicated_csv
        chmod 777 -R /tmp/dbf_duplicated_csv

    - name: Install dependencies
      run: |
        poetry lock
        poetry install

    - name: Create env file
      run: envsubst < .env.tpl > .env

    - name: Start containers
      run: |
        containers-sugar start --group dev

    - name: Container wait
      run: |
         make container-wait-all

    - name: Setup tmate session
      if: "${{ failure() }}"
      uses: mxschmitt/action-tmate@v3

    - name: Linting
      run: |
        pre-commit install
        pre-commit run --all-files
