 
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    env:
      COMPOSE_FILE: docker/docker-compose.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Latest Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        sudo apt-get update
        sudo apt-get install docker-ce

    - name: Check docker and docker-compose versions
      run: |
        docker-compose --version
        docker --version

    - name: Download demo DB
      run: |
        mkdir -p docker/dev_dumps
        wget https://dataverse.harvard.edu/api/access/datafile/4154429 -O docker/dev_dumps/latest_infodengue.sql.gz
        wget https://dataverse.harvard.edu/api/access/datafile/4154518 -O docker/dev_dumps/latest_dengue.sql.gz

    - name: Merge patch
      run: |
        cat docker/dev_dumps/patch/notificacao.sql >> docker/dev_dumps/latest_dengue.sql
        du -h docker/dev_dumps/

    - name: Prepare data file
      run: |
        cat docker/dev_dumps/latest_dengue.sql | gzip > docker/dev_dumps/latest_dengue.sql.gz
        echo '' | gzip > docker/dev_dumps/latest_infodengue.sql.gz

    - name: Copy env_file as env_staging
      run: |
        cp example_env_file .env_staging

    - name: make deploy_staging
      run: make deploy_staging

    - name: Run flake8
      run: make flake8_staging SERVICES_STAGING=staging_web

    - name: Run tests
      run: make test_staging_web SERVICES_STAGING=staging_web
